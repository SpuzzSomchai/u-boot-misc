see: http://ix.io/27ap
via: https://forum.armbian.com/topic/12372-h6-allwinner-tv-box-need-help/?do=findComment&comment=92764

diff --git a/arch/arm/mach-sunxi/dram_sun50i_h6.c b/arch/arm/mach-sunxi/dram_sun50i_h6.c
index 9375db76a1..5fa7eae351 100644
--- a/arch/arm/mach-sunxi/dram_sun50i_h6.c
+++ b/arch/arm/mach-sunxi/dram_sun50i_h6.c
@@ -59,7 +59,9 @@ static void mctl_phy_pir_init(u32 val)
 
 	writel(val, &mctl_phy->pir);
 	writel(val | BIT(0), &mctl_phy->pir);	/* Start initialisation. */
+	udelay(1);
 	mctl_await_completion(&mctl_phy->pgsr[0], BIT(0), BIT(0));
+	udelay(1);
 }
 
 enum {
@@ -291,13 +293,15 @@ static void mctl_com_init(struct dram_para *para)
 
 	mctl_set_addrmap(para);
 
-	setbits_le32(&mctl_com->cr, BIT(31));
+	reg_val = readl(&mctl_com->cr) | BIT(31);
 
 	/* The bonding ID seems to be always 7. */
 	if (readl(SUNXI_SIDC_BASE + 0x100) == 7)	/* bonding ID */
-		clrbits_le32(&mctl_com->cr, BIT(27));
+		reg_val &= ~BIT(27);
 	else if (readl(SUNXI_SIDC_BASE + 0x100) == 3)
-		setbits_le32(&mctl_com->cr, BIT(27));
+		reg_val |= BIT(27);
+	
+	writel(reg_val, &mctl_com->cr);
 
 	if (para->clk > 408)
 		reg_val = 0xf00;
@@ -427,7 +431,7 @@ static void mctl_channel_init(struct dram_para *para)
 	setbits_le32(&mctl_ctl->unk_0x00c, BIT(8));
 	clrsetbits_le32(&mctl_phy->pgcr[1], 0x180, 0xc0);
 	/* TODO: non-LPDDR3 types */
-	clrsetbits_le32(&mctl_phy->pgcr[2], GENMASK(17, 0), ns_to_t(7800));
+	clrsetbits_le32(&mctl_phy->pgcr[2], GENMASK(17, 0), ns_to_t(7800 * 2));
 	clrbits_le32(&mctl_phy->pgcr[6], BIT(0));
 	clrsetbits_le32(&mctl_phy->dxccr, 0xee0, 0x220);
 	/* TODO: VT compensation */
@@ -638,10 +642,10 @@ unsigned long mctl_calc_size(struct dram_para *para)
 	 {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	\
 	 {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 }}
 #define SUN50I_H6_DDR3_DX_READ_DELAYS					\
-	{{  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	\
-	 {  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  0,  0 },	\
-	 {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 },	\
-	 {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0 }}
+	{{  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  4,  4 },	\
+	 {  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  2,  2 },	\
+	 {  4,  4,  4,  4,  4,  4,  4,  4,  4,  0,  0,  0,  4,  4 },	\
+	 {  2,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  2,  2 }}
 
 unsigned long sunxi_dram_init(void)
 {
diff --git a/arch/arm/mach-sunxi/dram_timings/h6_ddr3_1333.c b/arch/arm/mach-sunxi/dram_timings/h6_ddr3_1333.c
index 611eaa3024..31dce77281 100644
--- a/arch/arm/mach-sunxi/dram_timings/h6_ddr3_1333.c
+++ b/arch/arm/mach-sunxi/dram_timings/h6_ddr3_1333.c
@@ -33,7 +33,7 @@
  * 	CAS write latency (CWL): 8
  */
 static u32 mr_ddr3[7] = {
-	0x00001c70, 0x00000040, 0x00000018, 0x00000000,
+	0x00001a70, 0x00000040, 0x00000018, 0x00000000,
 	0x00000000, 0x00000400, 0x00000848,
 };
 
@@ -48,17 +48,16 @@ void mctl_set_timing_params(struct dram_para *para)
 
 	u8 tccd		= 2;			/* JEDEC: 4nCK */
 	u8 tfaw		= ns_to_t(50);		/* JEDEC: 30 ns w/ 1K pages */
-	u8 trrd		= max(ns_to_t(6), 4);	/* JEDEC: max(6 ns, 4nCK) */
+	u8 trrd		= max(ns_to_t(10), 2);	/* JEDEC: max(6 ns, 4nCK) */
 	u8 trcd		= ns_to_t(15);		/* JEDEC: 13.5 ns */
 	u8 trc		= ns_to_t(53);		/* JEDEC: 49.5 ns */
-	u8 txp		= max(ns_to_t(6), 3);	/* JEDEC: max(6 ns, 3nCK) */
+	u8 txp		= max(ns_to_t(8), 2);	/* JEDEC: max(6 ns, 3nCK) */
 	u8 twtr		= max(ns_to_t(8), 2);	/* JEDEC: max(7.5 ns, 4nCK) */
 	u8 trtp		= max(ns_to_t(8), 2);	/* JEDEC: max(7.5 ns, 4nCK) */
 	u8 twr		= ns_to_t(15);		/* JEDEC: 15 ns */
 	u8 trp		= ns_to_t(15);		/* JEDEC: >= 13.75 ns */
 	u8 tras		= ns_to_t(38);		/* JEDEC >= 36 ns, <= 9*trefi */
-	u8 twtr_sa	= 2;			/* ? */
-	u8 tcksrea	= 4;			/* ? */
+	u8 tcksrea	= 8;			/* ? */
 	u16 trefi	= ns_to_t(7800) / 32;	/* JEDEC: 7.8us@Tcase <= 85C */
 	u16 trfc	= ns_to_t(350);		/* JEDEC: 160 ns for 2Gb */
 	u16 txsr	= 4;			/* ? */
@@ -66,7 +65,7 @@ void mctl_set_timing_params(struct dram_para *para)
 	u8 tmrw		= 0;			/* ? */
 	u8 tmrd		= 4;			/* JEDEC: 4nCK */
 	u8 tmod		= max(ns_to_t(15), 12);	/* JEDEC: max(15 ns, 12nCK) */
-	u8 tcke		= max(ns_to_t(6), 3);	/* JEDEC: max(5.625 ns, 3nCK) */
+	u8 tcke		= 3;			/* JEDEC: max(5.625 ns, 3nCK) */
 	u8 tcksrx	= max(ns_to_t(10), 5);	/* JEDEC: max(10 ns, 5nCK) */
 	u8 tcksre	= max(ns_to_t(10), 5);	/* JEDEC: max(10 ns, 5nCK) */
 	u8 tckesr	= tcke + 1;		/* JEDEC: tCKE(min) + 1nCK */
@@ -124,7 +123,7 @@ void mctl_set_timing_params(struct dram_para *para)
 	       &mctl_phy->dtpr[0]);
 	writel((tfaw << 17) | 0x28000400 | (tmrd << 1), &mctl_phy->dtpr[1]);
 	writel(((txs << 6) - 1) | (tcke << 17), &mctl_phy->dtpr[2]);
-	writel(((txsdll << 22) - (0x1 << 16)) | twtr_sa | (tcksrea << 8),
+	writel(((txsdll << 22) - (0x1 << 16)) | (tcksrea << 8),
 	       &mctl_phy->dtpr[3]);
 	writel((txp << 1) | (trfc << 17) | 0x800, &mctl_phy->dtpr[4]);
 	writel((trc << 17) | (trcd << 9) | (twtr << 1), &mctl_phy->dtpr[5]);

