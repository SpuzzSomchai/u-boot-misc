see: https://freenode.irclog.whitequark.org/linux-sunxi/2020-08-09#27685489

dump the dram registers in u-boot

diff --git a/arch/arm/mach-sunxi/dram_sun50i_h6.c b/arch/arm/mach-sunxi/dram_sun50i_h6.c
index 9e34da4747..1ad94050a0 100644
--- a/arch/arm/mach-sunxi/dram_sun50i_h6.c
+++ b/arch/arm/mach-sunxi/dram_sun50i_h6.c
@@ -401,6 +401,9 @@ static void mctl_bit_delay_set(struct dram_para *para)
 	setbits_le32(&mctl_phy->pgcr[0], BIT(26));
 	udelay(1);
 
+	if (para->type != SUNXI_DRAM_TYPE_LPDDR3)
+		return;
+
 	if (para->type != SUNXI_DRAM_TYPE_LPDDR3)
 		return;
 
@@ -421,6 +424,7 @@ static void mctl_channel_init(struct dram_para *para)
 			(struct sunxi_mctl_phy_reg *)SUNXI_DRAM_PHY0_BASE;
 	int i;
 	u32 val;
+	u32 xdebug;
 
 	setbits_le32(&mctl_ctl->dfiupd[0], BIT(31) | BIT(30));
 	setbits_le32(&mctl_ctl->zqctl[0], BIT(31) | BIT(30));
@@ -436,6 +440,7 @@ static void mctl_channel_init(struct dram_para *para)
 	/* TODO: VT compensation */
 	clrsetbits_le32(&mctl_phy->dsgcr, BIT(0), 0x440060);
 	clrbits_le32(&mctl_phy->vtcr[1], BIT(1));
+	//writel(0x000013bf, &mctl_phy->pgcr[2]);
 
 	for (i = 0; i < 4; i++)
 		clrsetbits_le32(&mctl_phy->dx[i].gcr[0], 0xe00, 0x800);
@@ -478,6 +483,7 @@ static void mctl_channel_init(struct dram_para *para)
 	} else {
 		val = 0x600;
 	}
+	writel(0x00010237, &mctl_phy->dtcr[1]);
 	/* FIXME: NOT REVIEWED YET */
 	clrsetbits_le32(&mctl_phy->zq[0].zqcr, 0x700, val);
 	clrsetbits_le32(&mctl_phy->zq[0].zqpr[0], 0xff,
@@ -501,6 +507,7 @@ static void mctl_channel_init(struct dram_para *para)
 		val |= PIR_DRAMRST | PIR_WL;
 	mctl_phy_pir_init(val);
 
+
 	/* TODO: DDR4 types ? */
 	for (i = 0; i < 4; i++)
 		writel(0x00000909, &mctl_phy->dx[i].gcr[5]);
@@ -567,6 +574,18 @@ static void mctl_channel_init(struct dram_para *para)
 		debug("DRAM PHY PGSR0 = %x\n", readl(&mctl_phy->pgsr[0]));
 		for (i = 0; i < 4; i++)
 			debug("DRAM PHY DX%dRSR0 = %x\n", i, readl(&mctl_phy->dx[i].rsr[0]));
+		printf("Going for memdump\n");
+		for (xdebug = 0; xdebug < sizeof(struct sunxi_mctl_phy_reg); xdebug+=4) {
+			if (xdebug % 0x10 == 0) {
+				printf("%x: ", xdebug + 0x04005000);
+			}
+
+			printf("%08x ", readl((u32*)(0x04005000 + xdebug)));
+
+			if (xdebug % 0x10 == 0xc) {
+				printf("\n");
+			}
+		}
 		panic("Error while initializing DRAM PHY!\n");
 	}
